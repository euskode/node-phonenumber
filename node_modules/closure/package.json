{
  "name": "closure",
  "description": "Google closure-library wrapper for node.js",
  "version": "1.0.2",
  "url": "http://github.com/lm1/node-closure",
  "author": {
    "name": "Lukasz Mielicki",
    "email": "mielicki@gmail.com"
  },
  "main": "closure",
  "engines": {
    "node": ">=0.3.2"
  },
  "readme": "# node-closure\n\nClosure library wrapper for node.js.\nDoes execute closure scripts in same execution context while (optionally) in distinct global scope, what is a right thing to do.\n\nEnjoy!\n\n## Installation\n\nJust copy closure.js, or using npm:\n\n    npm install closure\n\n## Introduction\n\nTo apply closure to global object:\n\n    require.('closure').Closure(global);\n\nTo create separate instance of closure\n\n    var goog = require.('closure').Closure();\n\nBy default closure library base.js is expected to be found in\n./closure-library/closure/goog/, to override this, say:\n\n    var goog = require.('closure').Closure({CLOSURE_BASE_PATH: 'closure/goog/'});\n\nTo fetch additional closure dependencies:\n\n    goog.loadScript('my_deps.js');\n\nTo easily access other namespaces than goog either apply closure to\nglobal object or provide own global object, i.e.\n\n    var root = {};\n    require.('closure').Closure(root);\n    //root.goog is goog namespace\n    //root.soy is soy namespace\n",
  "readmeFilename": "README.md",
  "_id": "closure@1.0.2",
  "dist": {
    "shasum": "76561b1b443787d442ad17c0505dd9c6ff82544c"
  },
  "_from": "closure@1.0.2",
  "_resolved": "https://registry.npmjs.org/closure/-/closure-1.0.2.tgz"
}
